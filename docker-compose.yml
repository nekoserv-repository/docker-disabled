# # #
# dockerized nekoserv's disabled services
#

version: '3.6'

networks:
  private0:

services:

  main-services:
    image: hello-world
    container_name: main-services-disabled
    depends_on:
      - headphones
      - nginx-static-index
      - rutorrent
      - rutorrent-fpm
      - sickchill


headphones:
    build:
      context: dockerfiles/headphones
      args:
        UID: 1000
        GID: 1000
    container_name: headphones
    networks:
      - private0
    expose:
      - "8181"
    restart: unless-stopped
    environment:
      - TZ=$ENV_TIMEZONE
    tmpfs:
      - /tmp
    volumes:
      - ~/docker-data/headphones/data:/home/headphones/data
      - ~/Downloads/incomplete:/home/incomplete
      - ~/Downloads/postprocessing:/home/postprocessing
      - /mnt/nas/musics:/home/headphones/dl
    read_only: true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.headphones.rule=Host(`$ENV_DOMAIN`) && PathPrefix(`/headphones`)"
      - "traefik.http.routers.headphones.tls=true"
      - "traefik.http.routers.headphones.middlewares=global-auth@file"
      - "traefik.http.routers.headphones.tls.certresolver=default-ssl"


  nginx-static-index:
    build:
      context: dockerfiles/nginx-static-index
      args:
        UID: 1000
        GID: 1000
    container_name: nginx-static-index
    networks:
      - private0
    expose:
      - "18080"
    restart: unless-stopped
    environment:
      - TZ=$ENV_TIMEZONE
    tmpfs:
      - /tmp
    volumes:
      - ~/docker-data/nginx-static-index/static:/home/nginx/static
    read_only: true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx-static-index.rule=Host(`$ENV_DOMAIN`) && PathPrefix(`/`)"
      - "traefik.http.routers.nginx-static-index.tls=true"
      - "traefik.http.routers.nginx-static-index.middlewares=global-auth@file"
      - "traefik.http.routers.nginx-static-index.tls.certresolver=default-ssl"


  rutorrent:
    build:
      context: dockerfiles/rutorrent
      args:
        UID: 1000
        GID: 1000
        CONTAINER_NAME: openvpn-client
        RTORRENT_PORT: 5001
    container_name: rutorrent
    networks:
      - private0
    expose:
      - "18080"
    restart: unless-stopped
    environment:
      - TZ=$ENV_TIMEZONE
    tmpfs:
      - /tmp
    volumes:
      - ~/docker-data/rutorrent:/home/rutorrent/
    read_only: true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rutorrent.rule=Host(`$ENV_DOMAIN`) && PathPrefix(`/rutorrent`)"
      - "traefik.http.routers.rutorrent.tls=true"
      - "traefik.http.routers.rutorrent.middlewares=global-auth@file"
      - "traefik.http.routers.rutorrent.tls.certresolver=default-ssl"


  rutorrent-fpm:
    build:
      context: dockerfiles/rutorrent-fpm
      args:
        UID: 1000
        GID: 1000
    container_name: rutorrent-fpm
    networks:
      - private0
    expose:
      - "9000"
    restart: unless-stopped
    environment:
      - TZ=$ENV_TIMEZONE
    tmpfs:
      - /tmp
    volumes:
      - ~/docker-data/rutorrent:/home/rutorrent/
    read_only: true


  sickchill:
    build:
      context: dockerfiles/sickchill
      args:
        UID: 1000
        GID: 1000
    container_name: sickchill
    networks:
      - private0
    expose:
      - "8081"
    restart: unless-stopped
    environment:
      - TZ=Europe/Paris
    volumes:
      - ~/docker-data/sickchill/data:/home/sickchill/data
      - ~/Downloads/complete/SERIES:/home/sickchill/dl
      - ~/Downloads/postprocessing:/home/postprocessing
      - ~/Downloads/incomplete:/home/incomplete
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sickchill.rule=Host(`$DOMAIN`) && PathPrefix(`/sickchill`)"
      - "traefik.http.routers.sickchill.tls=true"
      - "traefik.http.routers.sickchill.middlewares=global-auth@file"
      - "traefik.http.routers.sickchill.tls.certresolver=default-ssl"
